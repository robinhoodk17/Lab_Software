?cvequality
??cvequality
library(cvequality)
?asym
?asymptotic_test
source('~/projects/R codes/comparing variation coefficients.R', echo=TRUE)
source('~/projects/R codes/comparing variation coefficients.R', echo=TRUE)
WT_data
source('~/projects/R codes/comparing variation coefficients.R', echo=TRUE)
WT_data
df = c(WT_data, Treat_data)
df
df = merge(WT_data, Treat_data)
df
WT_data
WT_data$KO = "KO"
WT_data
source('~/projects/R codes/comparing variation coefficients.R', echo=TRUE)
source('~/projects/R codes/comparing variation coefficients.R', echo=TRUE)
source('~/projects/R codes/comparing variation coefficients.R', echo=TRUE)
head(df)
tail(da)
tail(df)
?rbinf
?rbind
source('~/projects/R codes/comparing variation coefficients.R', echo=TRUE)
head(df)
tail(df)
df[1]
df[1][1]
df[1][1][1]
df[1][1][1][1]
df[1,1]
df[[1,1]]
df$`meg size`[1]
df$`meg size`
?asymptotic_test
df
asymptotic_test(df$`meg size`, "sample")
asymptotic_test(df$`meg size`, df$sample)
asymptotic_test(df$`meg distance`, df$sample)
?for
()
for (i in range(10)){
print(i)
}
for (i in range(0:10)){
print(i)
}
for (i in [0:10]){
print(i)
}
[0:10]
df
for (i in df){
print(1)
}
for (i in df[1:2]){
print(1)
}
for (i in df[0:2]){
print(1)
}
for (i in df[1:-1]){
print(1)
}
for (i in df[1:1]){
print(1)
for (i in df[1:length(df)-1]){
print(1)
}
source('~/projects/R codes/comparing variation coefficients.R', echo=TRUE)
WT_data
Treat_data
hist(WT_data$`meg distance`)
hist(Treat_data$`meg distance`)
?hist
hist(WT_data$`meg distance`, breaks = c(10,20,30,40,50,60,70,1))
hist(WT_data$`meg distance`, breaks = c(10,20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,210,220,230,240,250,260,270))
hist(WT_data$`meg distance`, breaks = c(10,20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,210,220,230,240,250,260,270,280,290,300,310,320,322))
hist(WT_data$`meg distance`, breaks = c(10,20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,210,220,230,240,250,260,270,280,290,300,310,320,330))
hist(WT_data$`meg distance`, breaks = 12)
hist(WT_data$`meg distance`, breaks = 50)
hist(WT_data$`meg distance`, breaks = 50, freq = False)
hist(WT_data$`meg distance`, breaks = 50, freq = FALSE)
hist(Treat_data$`meg distance`, breaks = 50, freq = FALSE)
??kmean
??cluster
WT_data$`meg distance`[WT_data$`meg distance`<5]
WT_data$`meg distance`[WT_data$`meg distance`<5].count
count(WT_data$`meg distance`[WT_data$`meg distance`<5])
length(WT_data$`meg distance`[WT_data$`meg distance`<5])
length(WT_data$`meg distance`[WT_data$`meg distance`<5])/length(WT_data$`meg distance`)
length((WT_data$`meg distance`))
?hist
hist(WT_data$`meg distance`, breaks = 50, freq = False)
hist(WT_data$`meg distance`, breaks = 50, freq = FALSE)
hist(WT_data$`meg distance`, breaks = 10, freq = FALSE)
hist(WT_data$`meg distance`, breaks = 1, freq = FALSE)
hist(WT_data$`meg distance`, breaks = 1, freq = TRUE)
h <- hist(WT_data$`meg distance`, breaks = 1, plot = FALSE)
h$counts = h$counts/sum(h$counts)
plot(h)
h <- hist(WT_data$`meg distance`, breaks = 50, plot = FALSE)
h$counts = h$counts/sum(h$counts)
plot(h)
h <- hist(Treat_data$`meg distance`, breaks = 50, plot = FALSE)
h$counts = h$counts/sum(h$counts)
plot(h)
source('~/projects/R codes/comparing variation coefficients.R', echo=TRUE)
df
plot(df$PLT,df$`contact megs`, abline(lm = "linear"))
source('~/projects/R codes/correlation matrix (all samples together).R', echo=TRUE)
?cor.test
df
source('~/projects/R codes/comparing variation coefficients.R', echo=TRUE)
df
cor.test(df$PLT, df$`contact megs`)
h <- plot(df$`contact megs`, df$PLT)
h <- abline(lm(df$PLT ~ df$`contact megs`, data = df))
ggplot(df, aes(x = "contact megs", y = "PLT")) + geom_point() + geom_smooth(method = lm)
ggplot(df, aes(x = "contact megs", y = "PLT")) + geom_point()
ggplot(df, aes(x = "contact megs", y = "PLT"))
df
ggplot(aes(x = df$`contact megs`, y = df$PLT)) + geom_point()
ggplot(df, aes(x = "contact megs", y = "PLT")) + geom_point()
df = df[2:]
df = df[2:length(df)]
df
ggplot(df, aes(x = "contact megs", y = "PLT")) + geom_point()
?plot
plot(df$`contact megs`, df$PLT)
plot(df$`contact megs`, df$PLT) + abline(method = lm)
plot(df$`contact megs`, df$PLT) + abline(methods(lm))
plot(df$`contact megs`, df$PLT) + abline(methods(linear))
plot(df$`contact megs`, df$PLT) + abline(methods("linear"))
df
df$PLT
ggplot(df, aes("contact megs", "PLT")) + geom_point()
h = ggplot(df, aes("contact megs", "PLT")) + geom_point() + geom_smooth()
h
(h = ggplot(df, aes("contact megs", "PLT")) + geom_point() + geom_smooth())
library(ggplot2)
(h = ggplot(df, aes("contact megs", "PLT")) + geom_point() + geom_smooth())
h
h
df
plot(df$`contact megs`, df$PLT)
scatter.smooth(df$`contact megs`, df$PLT)
scatter.smooth(df$`contact megs`, df$PLT, methods(lm))
?scatter.smooth
??scatter
source('~/projects/R codes/comparing variation coefficients.R', echo=TRUE)
df
source('~/projects/R codes/comparing variation coefficients.R', echo=TRUE)
source('~/projects/R codes/comparing variation coefficients.R', echo=TRUE)
source('~/projects/R codes/comparing variation coefficients.R', echo=TRUE)
df
source('~/projects/R codes/comparing variation coefficients.R', echo=TRUE)
df
source('~/projects/R codes/comparing variation coefficients.R', echo=TRUE)
cor.test(df$plt, df$contacts)
source('~/projects/R codes/comparing variation coefficients.R', echo=TRUE)
source('~/projects/R codes/comparing variation coefficients.R', echo=TRUE)
source('~/projects/R codes/comparing variation coefficients.R', echo=TRUE)
library(ggscatter)
library(mtcars)
data("mtcars")
source('~/projects/R codes/comparing variation coefficients.R', echo=TRUE)
ggscatter(
data,
x,
y,
combine = FALSE,
merge = FALSE,
color = "black",
fill = "lightgray",
palette = NULL,
shape = 19,
size = 2,
point = TRUE,
rug = FALSE,
title = NULL,
xlab = NULL,
ylab = NULL,
facet.by = NULL,
panel.labs = NULL,
short.panel.labs = TRUE,
add = c("none", "reg.line", "loess"),
add.params = list(),
conf.int = FALSE,
conf.int.level = 0.95,
fullrange = FALSE,
ellipse = FALSE,
ellipse.level = 0.95,
ellipse.type = "norm",
ellipse.alpha = 0.1,
ellipse.border.remove = FALSE,
mean.point = FALSE,
mean.point.size = ifelse(is.numeric(size), 2 * size, size),
star.plot = FALSE,
star.plot.lty = 1,
star.plot.lwd = NULL,
label = NULL,
font.label = c(12, "plain"),
font.family = "",
label.select = NULL,
repel = FALSE,
label.rectangle = FALSE,
parse = FALSE,
cor.coef = FALSE,
cor.coeff.args = list(),
cor.method = "pearson",
cor.coef.coord = c(NULL, NULL),
cor.coef.size = 4,
ggp = NULL,
show.legend.text = NA,
ggtheme = theme_pubr(),
...
)
source('~/projects/R codes/comparing variation coefficients.R', echo=TRUE)
source('~/projects/R codes/comparing variation coefficients.R', echo=TRUE)
cor.test(df$contacts, df$plt)
source('~/projects/R codes/comparing variation coefficients.R', echo=TRUE)
source('~/projects/R codes/correlation matrix (all samples together).R', echo=TRUE)
source('~/projects/R codes/correlation matrix (all samples together).R', echo=TRUE)
source('~/projects/R codes/correlation matrix (all samples together).R', echo=TRUE)
source('~/projects/R codes/correlation matrix (all samples together).R', echo=TRUE)
source('~/projects/R codes/correlation matrix (all samples together).R', echo=TRUE)
source('~/projects/R codes/correlation matrix (all samples together).R', echo=TRUE)
df
source('~/projects/R codes/correlation matrix (all samples together).R', echo=TRUE)
source('~/projects/R codes/correlation matrix (all samples together).R', echo=TRUE)
source('~/projects/R codes/correlation matrix (all samples together).R', echo=TRUE)
source('~/projects/R codes/correlation matrix (all samples together).R', echo=TRUE)
source('~/projects/R codes/correlation matrix (all samples together).R', echo=TRUE)
source('~/projects/R codes/correlation matrix (all samples together).R', echo=TRUE)
source('~/projects/R codes/correlation matrix (all samples together).R', echo=TRUE)
source('~/projects/R codes/correlation matrix (all samples together).R', echo=TRUE)
source('~/projects/R codes/correlation matrix (all samples together).R', echo=TRUE)
source('~/projects/R codes/correlation matrix (all samples together).R', echo=TRUE)
source('~/projects/R codes/correlation matrix (all samples together).R', echo=TRUE)
source('~/projects/R codes/correlation matrix (all samples together).R', echo=TRUE)
source('~/projects/R codes/correlation matrix (all samples together).R', echo=TRUE)
source('~/projects/R codes/correlation matrix (all samples together).R', echo=TRUE)
source('~/projects/R codes/correlation matrix (all samples together).R', echo=TRUE)
source('~/projects/R codes/correlation matrix (all samples together).R', echo=TRUE)
source('~/projects/R codes/correlation matrix (all samples together).R', echo=TRUE)
source('~/projects/R codes/correlation matrix (all samples together).R', echo=TRUE)
source('~/projects/R codes/correlation matrix (all samples together).R', echo=TRUE)
source('~/projects/R codes/correlation matrix (all samples together).R', echo=TRUE)
source('~/projects/R codes/correlation matrix (all samples together).R', echo=TRUE)
source('~/projects/R codes/correlation matrix (all samples together).R', echo=TRUE)
source('~/projects/R codes/correlation matrix (all samples together).R', echo=TRUE)
source('~/projects/R codes/correlation matrix (all samples together).R', echo=TRUE)
source('~/projects/R codes/correlation matrix (all samples together).R', echo=TRUE)
source('~/projects/R codes/correlation matrix (all samples together).R', echo=TRUE)
source('~/projects/R codes/correlation matrix (all samples together).R', echo=TRUE)
source('~/projects/R codes/correlation matrix (all samples together).R', echo=TRUE)
source('~/projects/R codes/correlation matrix (all samples together).R', echo=TRUE)
source('~/projects/R codes/correlation matrix (all samples together).R', echo=TRUE)
source('~/projects/R codes/correlation matrix (all samples together).R', echo=TRUE)
source('~/projects/R codes/correlation matrix (all samples together).R', echo=TRUE)
source('~/projects/R codes/correlation matrix (all samples together).R', echo=TRUE)
